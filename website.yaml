openapi: 3.0.1
info:
  title: Enigma Website API
  version: 0.0.1
servers:
  - url: https://api-v3.startupcorner.io
    description: Backend server
paths:
  /auth:
    put:
      tags:
        - auth
      summary: SignIn
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successfully connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  token:
                    type: string
        '400':
          $ref: '#/components/responses/WrongInput'
        '500':
          $ref: '#/components/responses/GenericServerError'
    delete:
      tags:
        - auth
      summary: SignOut
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Signed out successfully
        '204':
          description: No effect
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/GenericServerError'
  /article:
    post:
      tags:
        - article
      summary: Add a new article
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                file:
                  type: string
      responses:
        '200':
          description: Successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                  created_at:
                    type: string
                    format: datetime
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/GenericServerError'
    get:
      tags:
        - article
      summary: Fetch existing articles
      responses:
        '200':
          description: Sucessfully fetched
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                    created_at:
                      type: string
                      format: datetime
                    title:
                      type: string
                    description:
                      type: string
                    file:
                      type: string
        '500':
          $ref: '#/components/responses/GenericServerError'
  /article/{uuid}:
    get:
      tags:
        - article
      summary: Get article's details
      parameters:
      - name: uuid
        schema:
          type: string
        in: path
        description: article's ID
        required: true
      responses:
        '200':
          description: Sucessfully fetched
          content:
            application/json:
              schema: 
                type: object
                properties:
                  created_at:
                    type: string
                    format: datetime
                  title:
                    type: string
                  description:
                    type: string
                  file:
                    type: string
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/GenericServerError'
    put:
      tags:
        - article
      summary: Update article's content
      security:
        - bearerAuth: []
      parameters:
      - name: uuid
        schema:
          type: string
        in: path
        description: article's ID
        required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                file:
                  type: string
      responses:
        '200':
          description: Successfully updated
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/GenericServerError'
    delete:
      tags:
        - article
      summary: Delete an article
      security:
        - bearerAuth: []
      parameters:
      - name: uuid
        schema:
          type: string
        in: path
        description: article's ID
        required: true
      responses:
        '200':
          description: Successfully deleted
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/GenericServerError'
  /career:
    post:
      tags:
        - career
      summary: Add a new career item
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                location:
                  type: string
      responses:
        '200':
          description: Successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                  created_at:
                    type: string
                    format: datetime
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/GenericServerError'
    get:
      tags:
        - career
      summary: Fetch existing careers' items
      responses:
        '200':
          description: Sucessfully fetched
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                    created_at:
                      type: string
                      format: datetime
                    title:
                      type: string
                    description:
                      type: string
                    file:
                      type: string
        '500':
          $ref: '#/components/responses/GenericServerError'
  /career/{uuid}:
    get:
      tags:
        - career
      summary: Get career item's details
      parameters:
      - name: uuid
        schema:
          type: string
        in: path
        description: career's ID
        required: true
      responses:
        '200':
          description: Sucessfully fetched
          content:
            application/json:
              schema: 
                type: object
                properties:
                  created_at:
                    type: string
                    format: datetime
                  title:
                    type: string
                  description:
                    type: string
                  location:
                    type: string
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/GenericServerError'
    put:
      tags:
        - career
      summary: Update career item's content
      security:
        - bearerAuth: []
      parameters:
      - name: uuid
        schema:
          type: string
        in: path
        description: career's ID
        required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                location:
                  type: string
      responses:
        '200':
          description: Successfully updated
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/GenericServerError'
    delete:
      tags:
        - career
      summary: Delete a career item
      security:
        - bearerAuth: []
      parameters:
      - name: uuid
        schema:
          type: string
        in: path
        description: career's ID
        required: true
      responses:
        '200':
          description: Successfully deleted
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/GenericServerError'
    post:
      tags:
        - career
      summary: Apply to a careers' position
      parameters:
      - name: uuid
        schema:
          type: string
        in: path
        description: career's ID
        required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                CV:
                  type: string
                letter:
                  type: string
      responses:
        '200':
          description: Successfully updated
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/GenericServerError'
  /subscribe:
    post:
      tags:
        - communication
      summary: Adds an email to the subscription list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
      responses:
        '200':
          description: Successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                  created_at:
                    type: string
                    format: datetime
        '500':
          $ref: '#/components/responses/GenericServerError'
  /contact:
    post:
      tags:
        - communication
      summary: Contact us
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                company:
                  type: string
                subject:
                  type: string
                message:
                  type: string
      responses:
        '200':
          description: Successfully created
        '500':
          $ref: '#/components/responses/GenericServerError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
  responses:
    WrongInput:
      description: Bad request (mostly - inputs/headers related problem)
    NotFound:
      description: The specified resource was not found
    GenericServerError:            
      description: A Generic Server Error occured
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: You're not authorized to access to the requested resource
    Forbidden:
      description: Access is forbidden